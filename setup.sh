#!/bin/bash

# TODO: もっと安全な方法にする.
# curl https://raw.githubusercontent.com/Tibowl/api_start2/refs/heads/master/parsed/api_mst_ship.json             > ./assets/api_mst_ship.json
# curl https://raw.githubusercontent.com/Tibowl/api_start2/refs/heads/master/parsed/api_mst_slotitem.json         > ./assets/api_mst_slotitem.json
# curl https://raw.githubusercontent.com/ElectronicObserverEN/Data/refs/heads/master/Data/FitBonuses.json         > ./assets/fit_bonuses.json
# curl https://raw.githubusercontent.com/KC3Kai/kancolle-replay/refs/heads/master/js/data/mst_slotitem_bonus.json > ./assets/mst_slotitem_bonus.json

# api_mst_ship の処理
generate_ship_inc_file() {
    local json="./assets/api_mst_ship.json"
    local output="./library/core/constants/ship.hpp.inc"

    echo "// generated by ./setup.sh" > "$output"
    echo "inline constexpr auto api_mst_ship = std::to_array<std::pair<kcv::kcsapi::ship_id, std::string_view>>({" >> "$output"

    # api_mst_ship.json からデータを抽出して出力
    jq -r '.[] | "\(.api_id), \(.api_name)"' "$json" | while IFS=', ' read -r api_id api_name; do
        echo "    {kcv::kcsapi::ship_id{$api_id}, \"$api_name\"}," >> "$output"
    done

    echo "});" >> "$output"
}

# api_mst_slotitem の処理
generate_equipment_inc_file() {
    local json="./assets/api_mst_slotitem.json"
    local output="./library/core/constants/equipment.hpp.inc"

    echo "// generated by ./setup.sh" > "$output"
    echo "inline constexpr auto api_mst_slotitem = std::to_array<std::pair<kcv::kcsapi::equipment_id, std::string_view>>({" >> "$output"

    # api_mst_slotitem.json からデータを抽出して出力
    jq -r '.[] | "\(.api_id), \(.api_name)"' "$json" | while IFS=', ' read -r api_id api_name; do
        echo "    {kcv::kcsapi::equipment_id{$api_id}, \"$api_name\"}," >> "$output"
    done

    echo "});" >> "$output"
}

# api_mst_ship の処理を実行
generate_ship_inc_file

# api_mst_slotitem の処理を実行
generate_equipment_inc_file
